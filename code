Fraction to Decimal:

import java.util.Scanner;
class HelloWorld {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter a decimal number:");
        String s = sc.next();
        String k = "";
        int z,f=0,d=0, i=0;
        while(s.charAt(i)!='.'){
            k=k+s.charAt(i);
            d++;
            i++;
        }
        i++;
        f=s.length()-d-1;
        String l = "1";
        for(z=0;z<f;z++){
            k=k+s.charAt(i);
            i++;
            l=l+"0";
        }
        i=0;
        f=Integer.parseInt(l);
        d=Integer.parseInt(k);
        while(i<f){
            if(d%2==0 && f%2==0){
                d=d/2;
                f=f/2;
            }
            else if(d%5==0 && f%5==0){
                d=d/5;
                f=f/5;
            }
            else{
                break;
            }
        }
        System.out.println("Fraction representation:");
        System.out.println(d+"/"+f);
        
    }
}


Vowel or consonant:
a=in.next().charAt(0);
switch(Character.toLowerCase(a)


To generate a vehicle number plate:
Random r = new Random();
int n = r.next(10000);
for(int i=0;i<3;i++){
char c = (char)(r.nextInt(26)+'a');
SOP(Character.toUpperCase(c));
}
SOP(" "+n);


Factors of a number:
int a = sc.nextInt();
int i=2;
SOP("1,");
while(a>1){
if(a%i==0){
SOP(i+",")
a=a/i;
}
else
i++;


GCD main code:
while(a>1 && b>1){
if(a%i==0 && b%i==0){
gcd=gcd*i;
a=a/i;
b=b/i;}
else
i++;


Matrix count odd numbers of 1 in rows:
Random r = new Random();
for(int i=0;i<6;i++){
for(int j=0;j<6;j++){
arr[i][j] = r.nextInt(2);
}}
for(int i=0;i<6;i++){
for(int j=0;j<6;j+=){
SOPrint(arr[i][j]+" ");
}sopln();
int count=0;
for(int i=0;i<6;i++){
count = 0;
for(int j=0;j<6;j+=){
if(arr[i][j]==1){
count++;}
}}
if(count%2!=0){
SOP("row address:"+(i+1));}

Random obj with seed
Random r = new Random(1000);
for(int i<0;i<50;i++){
SOP(r.nextInt(49));}
